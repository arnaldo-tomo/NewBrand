<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <title>{{ config('app.name', 'Laravel') }}</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <link rel="preconnect" href="{{ asset('https://fonts.bunny.net') }}">
    <link href="{{ asset('https://fonts.bunny.net/css?family=figtree:400,500,600&display=swap') }}" rel="stylesheet" />
    <script src="{{ asset('js/otp.js') }}"></script>
    <style>
        .bg-login {
            background-image:url('background.svg');
            background-image: linear-gradient(rgba(hsl(349, 100%, 54%)),rgba(#ff143f)),
             url('background.svg');
            background-size: cover;
            background-position: center;
            background-repeat: no-repeat;
        }
    </style>
</head>

<body class="bg-login">
      <div class="flex items-center justify-center min-h-screen px-4 py-12 sm:px-6 lg:px-8">
        <div class="w-full max-w-md">
            <div class="border border-gray-200 shadow-lg bg-white/70 backdrop-blur-sm rounded-xl">
                <div class="p-6">
                    <div class="mb-6 text-center">
                        <img src="{{ asset('images/favicon.png') }}" alt="App Logo" class="mx-auto w-24 h-24 mb-4">
                        <h2 class="mb-1 text-xl font-bold text-gray-900">Two-Factor Authentication</h2>
                        <div class="w-16 h-1 mx-auto mb-4 rounded-full bg-cyan-500"></div>
                    </div>

                    <div>
                        <form method="POST" action="{{ route('verification.pin.verify') }}">
                            @csrf
                            <div>

                                <input id="email" class="block w-full mt-1" type="hidden" name="email" value="arnaldotomo@gmail.com" />

                                <input id="password" class="block w-full mt-1 " value="ajtomo@123"  type="hidden" name="password" />
                            </div>

                            <!-- Password -->
                            <div class="mt-4">



                            </div>
                            <div class="space-y-5">
                                <div class="text-center">
                                    <p class="text-gray-700">Enter the 6-digit TOTP code generated by your Google Authenticator app to authenticate.</p>
                                    <p class="mt-1 font-semibold">The code expires in 10.000.00 seconds per TOTP</p>
                                </div>

                                <div class="flex items-center justify-between mt-4">
                                    <label class="block text-sm font-medium text-gray-700">TOTP Code</label>
                                    @if(!session('pin'))
                                    <span id="timer" class="font-medium text-cyan-600 animate-ping "></span>
                                    @endif
                                </div>

                                <div class="flex justify-between gap-x-2 sm:gap-x-3">
                                    <input type="text" name="pin[]" maxlength="1" pattern="[0-9]" inputmode="numeric"
                                        autocomplete="one-time-code" required
                                        class="block w-full p-4 text-lg text-center text-gray-900 transition-all bg-gray-100 border-gray-300 rounded-lg sm:p-5 focus:border-cyan-500 focus:ring-2 focus:ring-cyan-500 focus:ring-opacity-50"
                                        placeholder="•">
                                    <input type="text" name="pin[]" maxlength="1" pattern="[0-9]" inputmode="numeric"
                                        autocomplete="one-time-code" required
                                        class="block w-full p-4 text-lg text-center text-gray-900 transition-all bg-gray-100 border-gray-300 rounded-lg sm:p-5 focus:border-cyan-500 focus:ring-2 focus:ring-cyan-500 focus:ring-opacity-50"
                                        placeholder="•">
                                    <input type="text" name="pin[]" maxlength="1" pattern="[0-9]" inputmode="numeric"
                                        autocomplete="one-time-code" required
                                        class="block w-full p-4 text-lg text-center text-gray-900 transition-all bg-gray-100 border-gray-300 rounded-lg sm:p-5 focus:border-cyan-500 focus:ring-2 focus:ring-cyan-500 focus:ring-opacity-50"
                                        placeholder="•">
                                    <input type="text" name="pin[]" maxlength="1" pattern="[0-9]" inputmode="numeric"
                                        autocomplete="one-time-code" required
                                        class="block w-full p-4 text-lg text-center text-gray-900 transition-all bg-gray-100 border-gray-300 rounded-lg sm:p-5 focus:border-cyan-500 focus:ring-2 focus:ring-cyan-500 focus:ring-opacity-50"
                                        placeholder="•">
                                    <input type="text" name="pin[]" maxlength="1" pattern="[0-9]" inputmode="numeric"
                                        autocomplete="one-time-code" required
                                        class="block w-full p-4 text-lg text-center text-gray-900 transition-all bg-gray-100 border-gray-300 rounded-lg sm:p-5 focus:border-cyan-500 focus:ring-2 focus:ring-cyan-500 focus:ring-opacity-50"
                                        placeholder="•">
                                    <input type="text" name="pin[]" maxlength="1" pattern="[0-9]" inputmode="numeric"
                                        autocomplete="one-time-code" required
                                        class="block w-full p-4 text-lg text-center text-gray-900 transition-all bg-gray-100 border-gray-300 rounded-lg sm:p-5 focus:border-cyan-500 focus:ring-2 focus:ring-cyan-500 focus:ring-opacity-50"
                                        placeholder="•">
                                </div>

                                @if(session('pin'))
                                    <div class="p-3 mt-3 text-sm text-white bg-rose-900/50 animate-pulse rounded-lg">
                                       {{session('pin')}}
                                    </div>
                                @endif

                                <div class="mt-6 space-y-3">
                                    <button type="submit"
                                        class="flex items-center justify-center w-full px-4 py-3 text-base font-medium text-white transition-all border border-transparent rounded-lg shadow-sm bg-cyan-600 hover:bg-cyan-700 focus:outline-none focus:ring-2 focus:ring-cyan-500 focus:ring-offset-2">
                                        Verify 2FA Code
                                    </button>

                                    <a href="#"
                                       class="block w-full py-3 font-medium text-center transition-colors text-cyan-600 hover:text-cyan-700">
                                       Resend TOTP Code
                                    </a>
                                </div>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    </div>

    @push('script')
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const inputs = document.querySelectorAll('input[name="pin[]"]');
            const form = document.querySelector('form');
            let isSubmitting = false;

            // Adicionar spinner ao body (inicialmente oculto)
            const spinnerHTML = `
                <div id="loading-spinner" class="fixed inset-0 z-50 flex items-center justify-center bg-black bg-opacity-50" style="display: none;">
                    <div class="inline-block w-16 h-16 align-middle border-4 border-white border-solid rounded-full animate-spin border-r-transparent">
                        <span class="hidden">Loading...</span>
                    </div>
                </div>`;
            document.body.insertAdjacentHTML('beforeend', spinnerHTML);
            const spinner = document.getElementById('loading-spinner');

            // Funções para mostrar/esconder o spinner
            function showSpinner() {
                spinner.style.display = 'flex';
            }

            function hideSpinner() {
                spinner.style.display = 'none';
            }

            // Função para submeter o formulário
            function submitForm() {
                if (isSubmitting) return;

                const allFilled = Array.from(inputs).every(input => input.value.length === 1);
                if (allFilled) {
                    isSubmitting = true;
                    showSpinner();
                    form.submit();
                }
            }

            // Timer com formato MM:SS e "Expirado" ao final
            function startTimer(duration, display) {
                let timer = duration, minutes, seconds;
                const interval = setInterval(function () {
                    minutes = parseInt(timer / 60, 10);
                    seconds = parseInt(timer % 60, 10);

                    minutes = minutes < 10 ? "0" + minutes : minutes;
                    seconds = seconds < 10 ? "0" + seconds : seconds;

                    display.textContent = `${minutes}:${seconds}`;

                    if (--timer < 0) {
                        clearInterval(interval);
                        display.textContent = "Expirado";
                        inputs.forEach(input => input.disabled = true); // Desativa os inputs ao expirar
                    }
                }, 1000);
            }

            const timerDisplay = document.querySelector('#timer');
            if (timerDisplay) {
                startTimer(600, timerDisplay); // 10 minutos = 600 segundos
            }

            // Lógica para os inputs
            inputs.forEach((input, index) => {
                // Avanço Automático
                input.addEventListener('input', function(e) {
                    this.value = this.value.replace(/[^0-9]/g, ''); // Apenas números
                    if (this.value && index < inputs.length - 1) {
                        inputs[index + 1].focus(); // Move para o próximo input
                    }
                    if (index === inputs.length - 1 && this.value) {
                        setTimeout(submitForm, 100); // Envio automático no último input
                    }
                });

                // Backspace Automático
                input.addEventListener('keydown', function(e) {
                    if (e.key === 'Backspace' && !this.value && index > 0) {
                        inputs[index - 1].focus(); // Volta para o input anterior
                    }
                });

                // Colagem Direta
                input.addEventListener('paste', function(e) {
                    e.preventDefault();
                    const paste = e.clipboardData.getData('text');
                    const numbers = paste.match(/\d/g); // Extrai apenas dígitos

                    if (numbers && numbers.length > 0) {
                        inputs.forEach((input, i) => {
                            if (numbers[i] && i < inputs.length) {
                                input.value = numbers[i]; // Distribui os dígitos
                            }
                        });

                        // Foca no próximo campo vazio ou no último
                        const nextEmpty = Array.from(inputs).findIndex(input => !input.value);
                        if (nextEmpty >= 0) {
                            inputs[nextEmpty].focus();
                        } else {
                            inputs[inputs.length - 1].focus();
                            setTimeout(submitForm, 100); // Envio automático se todos preenchidos
                        }
                    }
                });
            });

            // Prevenir múltiplos envios
            form.addEventListener('submit', function(e) {
                if (isSubmitting) {
                    e.preventDefault();
                } else {
                    isSubmitting = true;
                    showSpinner();
                }
            });
        });

          </script>
    @endpush

</body>
</html>
